

# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_121097813989638138346058726004363325645055007528244635971148694227865847570370087018045267126514696616744216943938638911580999312232908265654986785392772317303161096833644079741186123067589808986604522528602623394273539018995365633 = Integer(121097813989638138346058726004363325645055007528244635971148694227865847570370087018045267126514696616744216943938638911580999312232908265654986785392772317303161096833644079741186123067589808986604522528602623394273539018995365633); _sage_const_1 = Integer(1); _sage_const_3 = Integer(3); _sage_const_100 = Integer(100)
from Crypto.Util.number import long_to_bytes
c = _sage_const_121097813989638138346058726004363325645055007528244635971148694227865847570370087018045267126514696616744216943938638911580999312232908265654986785392772317303161096833644079741186123067589808986604522528602623394273539018995365633  
m = c**(_sage_const_1 /_sage_const_3 )
print(long_to_bytes(int(m.n(digits=_sage_const_100 ))).decode())

